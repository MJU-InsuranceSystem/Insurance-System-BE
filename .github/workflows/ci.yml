name: CI script

on:
  push:
    branches:
      - main

jobs:
  build_and_push:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build
      env:
          ACTIVE_NAME: ${{ secrets.ACTIVE_NAME }}
          JWT_SECRET_KEY : ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
          registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ secrets.DEV_ECR_REGISTRY_ALIAS }}
          REPOSITORY: dev-ecr
          IMAGE_TAG: latest
      run: |
          echo "REPOSITORY: $REPOSITORY"
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"

    - name: Logout of Amazon ECR
      run: docker logout ${{ env.ECR_REGISTRY }}
