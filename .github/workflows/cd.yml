on: workflow_dispatch

jobs:
  deploy:

    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin public.ecr.aws

      - name: SSH into EC2 and Deploy with Docker Compose
        env:
          SSH_KEY: ${{ secrets.DEV_EC2_SSH_KEY }}
          HOST: 3.39.206.214
          USER: ubuntu
        run: |
          echo "${SSH_KEY}" > ec2_key.pem
          chmod 600 ec2_key.pem
          
          # Connect to EC2 and run deployment commands
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${USER}@${HOST} << 'EOF'
          # Install Docker Compose if not already installed
          if ! [ -x "$(command -v docker-compose)" ]; then
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Create deployment directory if it doesn't exist
          mkdir -p ~/deployment
          
          # Remove old docker-compose.yml if exists
          rm -f ~/deployment/docker-compose.yml
          EOF

      - name: Upload Docker Compose File
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_EC2_SSH_KEY }}
          source: ./docker-compose.yml
          target: ~/deployment/docker-compose.yml

      - name: SSH into EC2 and Start Docker Compose
        env:
          SSH_KEY: ${{ secrets.DEV_EC2_SSH_KEY }}
          HOST: 3.39.206.214
          USER: ubuntu
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${USER}@${HOST} << 'EOF'
          cd ~/deployment
          
          # Pull the latest image
          docker-compose pull
          
          # Start or recreate the container
          docker-compose up -d
          EOF
